# Library name
LIB	=	all

# Useful relative directories
LIBCPERCIVA_DIR	=	../libcperciva
LIB_DIR		=	../lib

# Fundamental algorithms
.PATH.c	:	${LIBCPERCIVA_DIR}/alg
SRCS	+=	sha256.c
SRCS	+=	sha256_arm.c
SRCS	+=	sha256_shani.c
SRCS	+=	sha256_sse2.c
IDIRS	+=	-I${LIBCPERCIVA_DIR}/alg

# CPU features detection
.PATH.c	:	${LIBCPERCIVA_DIR}/cpusupport
SRCS	+=	cpusupport_arm_aes.c
SRCS	+=	cpusupport_arm_sha256.c
SRCS	+=	cpusupport_x86_aesni.c
SRCS	+=	cpusupport_x86_rdrand.c
SRCS	+=	cpusupport_x86_shani.c
SRCS	+=	cpusupport_x86_sse2.c
SRCS	+=	cpusupport_x86_ssse3.c
IDIRS	+=	-I${LIBCPERCIVA_DIR}/cpusupport

# Crypto code
.PATH.c	:	${LIBCPERCIVA_DIR}/crypto
SRCS	+=	crypto_aes.c
SRCS	+=	crypto_aes_aesni.c
SRCS	+=	crypto_aes_arm.c
SRCS	+=	crypto_aesctr.c
SRCS	+=	crypto_aesctr_aesni.c
SRCS	+=	crypto_aesctr_arm.c
SRCS	+=	crypto_dh.c
SRCS	+=	crypto_dh_group14.c
SRCS	+=	crypto_entropy.c
SRCS	+=	crypto_entropy_rdrand.c
SRCS	+=	crypto_verify_bytes.c
IDIRS	+=	-I${LIBCPERCIVA_DIR}/crypto

# Data structures
.PATH.c	:	${LIBCPERCIVA_DIR}/datastruct
SRCS	+=	elasticarray.c
SRCS	+=	ptrheap.c
SRCS	+=	timerqueue.c
IDIRS	+=	-I${LIBCPERCIVA_DIR}/datastruct

# Event loop
.PATH.c	:	${LIBCPERCIVA_DIR}/events
SRCS	+=	events.c
SRCS	+=	events_immediate.c
SRCS	+=	events_network.c
SRCS	+=	events_network_selectstats.c
SRCS	+=	events_timer.c
IDIRS	+=	-I${LIBCPERCIVA_DIR}/events

# Event-driven networking
.PATH.c	:	${LIBCPERCIVA_DIR}/network
SRCS	+=	network_accept.c
SRCS	+=	network_connect.c
SRCS	+=	network_read.c
SRCS	+=	network_write.c
IDIRS	+=	-I${LIBCPERCIVA_DIR}/network

# Utility functions
.PATH.c	:	${LIBCPERCIVA_DIR}/util
SRCS	+=	asprintf.c
SRCS	+=	daemonize.c
SRCS	+=	entropy.c
SRCS	+=	getopt.c
SRCS	+=	insecure_memzero.c
SRCS	+=	monoclock.c
SRCS	+=	noeintr.c
SRCS	+=	perftest.c
SRCS	+=	setgroups_none.c
SRCS	+=	setuidgid.c
SRCS	+=	sock.c
SRCS	+=	sock_util.c
SRCS	+=	warnp.c
IDIRS	+=	-I${LIBCPERCIVA_DIR}/util

# Dnsthread functions
.PATH.c	:	${LIB_DIR}/dnsthread
SRCS	+=	dnsthread.c
IDIRS	+=	-I${LIB_DIR}/dnsthread

# spiped protocol
.PATH.c	:	${LIB_DIR}/proto
SRCS	+=	proto_conn.c
SRCS	+=	proto_crypt.c
SRCS	+=	proto_handshake.c
SRCS	+=	proto_pipe.c
IDIRS	+=	-I${LIB_DIR}/proto

# spiped utility functions
.PATH.c	:	${LIB_DIR}/util
SRCS	+=	graceful_shutdown.c
SRCS	+=	pthread_create_blocking.c
IDIRS	+=	-I${LIB_DIR}/util

.include <bsd.lib.mk>
