language: c
# Ubuntu xenial 16.04 comes with valgrind-3.11, which can't handle the
# RDRAND instructions and aborts with "Illegal instruction".  This is not a
# problem with Ubuntu bionic 18.04, which has valgrind-3.13.
dist: bionic
matrix:
  include:
    - os: linux
      compiler: clang
      env: CFLAGS_STRICT="-Wall -Wextra -Werror -Weverything -Wno-#warnings -Wno-pedantic -Wno-padded -Wno-format-nonliteral -Wno-disabled-macro-expansion -Wno-missing-noreturn -Wno-reserved-id-macro -Wno-cast-align -Wno-unused-macros"
    - os: linux
      compiler: gcc
      env: CFLAGS_STRICT="-Wall -Wextra -Werror -Wpedantic -pedantic-errors -Wno-clobbered"
    - os: osx
      compiler: clang
      env: CFLAGS_STRICT="-Wall -Wextra -Werror -Weverything -Wno-#warnings -Wno-pedantic -Wno-padded -Wno-format-nonliteral -Wno-disabled-macro-expansion -Wno-missing-noreturn -Wno-reserved-id-macro"
env:
  global:
    # Some projects need -std=c99 to specify library support for ./configure
    - CFLAGS="-std=c99 -O2"
    - secure: "TM30hoegVhKk0UE8RDFVbZ9Q29Z/ewceU19DsJf9ifiBXDl6OVnxujrMYwW/ltdRYIuhvvkJ2K94hN21pNNdUuExEXWtdSUQlEi8OWSDQBPaStwsM39xLoqUusCBEs7VLoSluhTBzn7CbnbWiqod5ZITGpDOqqvpBwuHAHdrURI0Rb8oPi2DnmzW8r8p2F+xIN/Y4iaRTpdCSthagyJDbE5ZXxPQCfDK1Yi4hYnIRUxJN3K6hMGZOOgCZLgWVL0njHU8OUp3GKiYwqnJOnd6RZTyfB4GFKnmYKr6Uwx+loH+g0da5jFiQdL47yxa1I1zPyOv2gDgmLcSpPRnFcf+gJwfGqvI4Z1VFU0T22x57aCHc9zW/29VvQWBDtO3ObFxPLxKLU5sXEj85HuJKxVvAn+jFcgao4cyqe+Y6YqBiXi/Yexi/QXsr2z0vKoESibBqdG9WEoNmuGDgQQnZYK1aOIIdceSMrAzBe6LuJMqNi5Lit9IxLWUNxyoNPjwclMg08iJeB6i7erfQpPUEAH6uHHF/RSdLR6eFATmV4ixCKibHnN0EgNcI2CDFjetviAwAnY88E+5F8GukZqZUT2iVwsxu6iFOxgNf3e5vFToXVHIw54NSkVWI++MvuFJ9r5jLnIImq5bLwnT0JObm/nEVJo0T2pIXGJ2Zf7Jo6DqGbc="
    - TEST_DNSTHREAD_ENABLE_REMOTE=1
    - COVERITY_SCAN_PROJECT_NAME="Tarsnap/spiped"
    - COVERITY_SCAN_BRANCH_PATTERN="coverity-scan"
    - COVERITY_SCAN_NOTIFICATION_EMAIL="cperciva@tarsnap.com"
    - COVERITY_SCAN_BUILD_COMMAND="make all clean"
before_install:
  # Handle Coverity scan
  - >
    if [[ "${TRAVIS_BRANCH}" == "coverity-scan" ]]; then
      if [[ "${TRAVIS_JOB_NUMBER##*.}" == "1" ]]; then
        curl -s "https://scan.coverity.com/scripts/travisci_build_coverity_scan.sh" | bash || true
      else
        echo "Not main job; do nothing."
      fi
      echo "Done Coverity scan."
      sleep 1
      exit 0
    fi
  # Otherwise, act normally.
  - 'if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export CFLAGS="-I/usr/local/opt/openssl/include $CFLAGS" LDFLAGS="-L/usr/local/opt/openssl/lib $LDFLAGS"; fi'
# We can't use strict flags in CFLAGS as a general environment
# variable, because that messes up ./configure and coverity-scan.
script:
  - make "CFLAGS=$CFLAGS $CFLAGS_STRICT" && make test
