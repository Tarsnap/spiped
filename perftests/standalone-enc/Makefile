.POSIX:
# AUTOGENERATED FILE, DO NOT EDIT
PROG=test_standalone_enc
SRCS=main.c proto_crypt.c
IDIRS=-I../../lib/proto -I../../libcperciva/alg -I../../libcperciva/cpusupport -I../../libcperciva/crypto -I../../libcperciva/util
LDADD_REQ=-lcrypto
SUBDIR_DEPTH=../..
RELATIVE_DIR=perftests/standalone-enc
LIBALL=../../liball/liball.a

all:
	if [ -z "$${HAVE_BUILD_FLAGS}" ]; then \
		cd ${SUBDIR_DEPTH}; \
		${MAKE} BUILD_SUBDIR=${RELATIVE_DIR} \
		    BUILD_TARGET=${PROG} buildsubdir; \
	else \
		${MAKE} ${PROG}; \
	fi

clean:
	rm -f ${PROG} ${SRCS:.c=.o}

${PROG}:${SRCS:.c=.o} ${LIBALL}
	${CC} -o ${PROG} ${SRCS:.c=.o} ${LIBALL} ${LDFLAGS} ${LDADD_EXTRA} ${LDADD_REQ} ${LDADD_POSIX}

main.o: main.c ../../libcperciva/cpusupport/cpusupport.h ../../cpusupport-config.h ../../libcperciva/crypto/crypto_aes.h ../../libcperciva/crypto/crypto_aesctr.h ../../libcperciva/util/parsenum.h ../../libcperciva/util/perftest.h ../../lib/proto/proto_crypt.h ../../libcperciva/crypto/crypto_dh.h ../../libcperciva/alg/sha256.h ../../libcperciva/util/sysendian.h ../../libcperciva/util/warnp.h
	${CC} ${CFLAGS_POSIX} -D_POSIX_C_SOURCE=200809L -D_XOPEN_SOURCE=700 -DCPUSUPPORT_CONFIG_FILE=\"cpusupport-config.h\" -DSTANDALONE_ENC_TESTING -I../.. ${IDIRS} ${CPPFLAGS} ${CFLAGS} -c main.c -o main.o
proto_crypt.o: ../../lib/proto/proto_crypt.c ../../libcperciva/crypto/crypto_aes.h ../../libcperciva/crypto/crypto_aesctr.h ../../libcperciva/crypto/crypto_verify_bytes.h ../../libcperciva/util/insecure_memzero.h ../../libcperciva/alg/sha256.h ../../libcperciva/util/sysendian.h ../../libcperciva/util/warnp.h ../../lib/proto/proto_crypt.h ../../libcperciva/crypto/crypto_dh.h
	${CC} ${CFLAGS_POSIX} -D_POSIX_C_SOURCE=200809L -D_XOPEN_SOURCE=700 -DCPUSUPPORT_CONFIG_FILE=\"cpusupport-config.h\" -DSTANDALONE_ENC_TESTING -I../.. ${IDIRS} ${CPPFLAGS} ${CFLAGS} -c ../../lib/proto/proto_crypt.c -o proto_crypt.o

perftest:
	@${MAKE} all > /dev/null
	@printf "# nblks\tbsize\ttime\tspeed\talg\n"
	@for N in 1 2 3 4 ; do					\
		./test_standalone_enc $$N |			\
		    grep "blocks" |				\
		    awk -v N="$$N"				\
		    '{printf "%i\t%i\t%.6f\t%.6f\t%i\n",	\
			$$1, $$5, $$6, $$8, N}'; \
	done
