# Program name.
PROG	=	spiped
MAN1	:=	${PROG}.1

# Libraries which are sometimes merged into libc
LDADD	=	-lrt
#LDADD	+=	-lxnet	# Missing on FreeBSD

# Library code required
LDADD_REQ	=	-lcrypto
LDADD_REQ	+=	-lpthread

# Useful relative directories
LIBCPERCIVA_DIR	=	../libcperciva

# spiped code
SRCS	=	main.c
SRCS	+=	dispatch.c

# spipe protocol
.PATH.c	:	../proto
SRCS	+=	proto_conn.c
SRCS	+=	proto_crypt.c
SRCS	+=	proto_handshake.c
SRCS	+=	proto_pipe.c
IDIRS	+=	-I../proto

# Fundamental algorithms
.PATH.c	:	${LIBCPERCIVA_DIR}/alg
SRCS	+=	sha256.c
IDIRS	+=	-I${LIBCPERCIVA_DIR}/alg

# Data structures
.PATH.c	:	${LIBCPERCIVA_DIR}/datastruct
SRCS	+=	elasticarray.c
SRCS	+=	ptrheap.c
SRCS	+=	timerqueue.c
IDIRS	+=	-I${LIBCPERCIVA_DIR}/datastruct

# DNS resolution
.PATH.c	:	../lib/dnsthread
SRCS	+=	dnsthread.c
IDIRS	+=	-I../lib/dnsthread

# spiped utility functions
.PATH.c	:	../lib/util
SRCS	+=	graceful_shutdown.c
IDIRS	+=	-I../lib/util

# Utility functions
.PATH.c	:	${LIBCPERCIVA_DIR}/util
SRCS	+=	asprintf.c
SRCS	+=	daemonize.c
SRCS	+=	entropy.c
SRCS	+=	getopt.c
SRCS	+=	insecure_memzero.c
SRCS	+=	monoclock.c
SRCS	+=	noeintr.c
SRCS	+=	setuidgid.c
SRCS	+=	sock.c
SRCS	+=	sock_util.c
SRCS	+=	warnp.c
IDIRS	+=	-I${LIBCPERCIVA_DIR}/util

# CPU features detection
.PATH.c	:	${LIBCPERCIVA_DIR}/cpusupport
SRCS	+=	cpusupport_x86_aesni.c
IDIRS	+=	-I${LIBCPERCIVA_DIR}/cpusupport

# Event loop
.PATH.c	:	${LIBCPERCIVA_DIR}/events
SRCS	+=	events_immediate.c
SRCS	+=	events_network.c
SRCS	+=	events_network_selectstats.c
SRCS	+=	events_timer.c
SRCS	+=	events.c
IDIRS	+=	-I${LIBCPERCIVA_DIR}/events

# Event-driven networking
.PATH.c	:	${LIBCPERCIVA_DIR}/network
SRCS	+=	network_accept.c
SRCS	+=	network_connect.c
SRCS	+=	network_read.c
SRCS	+=	network_write.c
IDIRS	+=	-I${LIBCPERCIVA_DIR}/network

# Crypto code
.PATH.c	:	${LIBCPERCIVA_DIR}/crypto
SRCS	+=	crypto_aes.c
SRCS	+=	crypto_aes_aesni.c
SRCS	+=	crypto_aesctr.c
SRCS	+=	crypto_dh.c
SRCS	+=	crypto_dh_group14.c
SRCS	+=	crypto_entropy.c
SRCS	+=	crypto_verify_bytes.c
IDIRS	+=	-I${LIBCPERCIVA_DIR}/crypto

cflags-crypto_aes_aesni.o:
	@echo '$${CFLAGS_X86_AESNI}'

.include <bsd.prog.mk>
